<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Create Profile</title>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }
    .signup-container {
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 4px 8px rgba(0,0,0,0.1);
        width: 300px;
    }
    h2 {
        text-align: center;
        font-size: 18px;
        margin-bottom: 20px;
    }
    input[type="text"], input[type="email"], input[type="password"] {
        width: 100%;
        padding: 10px;
        margin: 8px 0;
        border-radius: 5px;
        border: 1px solid #ccc;
        box-sizing: border-box;
    }
    button {
        width: 100%;
        padding: 10px;
        background-color: #007BFF;
        border: none;
        color: white;
        font-size: 16px;
        border-radius: 5px;
        cursor: pointer;
        margin: 5px 0;
    }
    button:hover {
        background-color: #0056b3;
    }
    .success-message {
        background-color: #d4edda;
        color: #155724;
        padding: 10px;
        border-radius: 5px;
        margin: 10px 0;
        border: 1px solid #c3e6cb;
        display: none;
        text-align: center;
    }
    .error-message {
        background-color: #f8d7da;
        color: #721c24;
        padding: 10px;
        border-radius: 5px;
        margin: 10px 0;
        border: 1px solid #f5c6cb;
        display: none;
        text-align: center;
    }
    .loading {
        text-align: center;
        color: #007BFF;
        display: none;
    }
    .back-link {
        text-align: center;
        margin-top: 15px;
    }
    .back-link a {
        color: #007BFF;
        text-decoration: none;
        font-size: 14px;
    }
    .back-link a:hover {
        text-decoration: underline;
    }
</style>
</head>
<body>

<div class="signup-container">
    <h2>Create Profile</h2>
    <div id="successMessage" class="success-message">
        Profile created successfully! Redirecting to dashboard...
    </div>
    <div id="errorMessage" class="error-message">
        Error creating profile. Please try again.
    </div>
    <div id="loadingMessage" class="loading">
        Creating profile...
    </div>
    <form id="signupForm">
        <input type="text" id="name" name="name" placeholder="Name" required>
        <input type="email" id="email" name="email" placeholder="Email" required>
        <input type="password" id="password" name="password" placeholder="Password" required>
        <button type="submit" id="submitBtn">Submit</button>
    </form>
    <div class="back-link">
        <a href="LoginPage.html">‚Üê Back to Login</a>
    </div>
</div>

<script>
    // Simulate a user database (in a real app, this would be server-side)
    let userDatabase = JSON.parse(localStorage.getItem('userDatabase') || '[]');

    document.getElementById('signupForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const name = document.getElementById('name').value;
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        
        const successDiv = document.getElementById('successMessage');
        const errorDiv = document.getElementById('errorMessage');
        const loadingDiv = document.getElementById('loadingMessage');
        const submitBtn = document.getElementById('submitBtn');
        
        // Reset displays
        successDiv.style.display = 'none';
        errorDiv.style.display = 'none';
        
        // Show loading
        loadingDiv.style.display = 'block';
        submitBtn.disabled = true;
        submitBtn.textContent = 'Creating...';
        
        // Check if email already exists
        const existingUser = userDatabase.find(user => user.email === email);
        
        if (existingUser) {
            // Email already exists
            setTimeout(() => {
                loadingDiv.style.display = 'none';
                errorDiv.textContent = 'Email already registered. Please use a different email.';
                errorDiv.style.display = 'block';
                submitBtn.disabled = false;
                submitBtn.textContent = 'Submit';
            }, 1000);
            return;
        }
        
        // Simulate database save (replace with actual API call in production)
        setTimeout(() => {
            try {
                // Create new user object
                const newUser = {
                    id: Date.now(), // Simple ID generation
                    name: name,
                    email: email,
                    password: password, // In production, this should be hashed
                    createdAt: new Date().toISOString(),
                    projects: []
                };
                
                // Add to database
                userDatabase.push(newUser);
                
                // Save to localStorage (simulating database)
                localStorage.setItem('userDatabase', JSON.stringify(userDatabase));
                
                // Show success and redirect
                loadingDiv.style.display = 'none';
                successDiv.style.display = 'block';
                
                // Store current user session
                localStorage.setItem('currentUser', JSON.stringify(newUser));
                
                // Redirect to dashboard after 2 seconds
                setTimeout(() => {
                    window.location.href = 'Dashboard.html';
                }, 2000);
                
            } catch (error) {
                // Handle error
                loadingDiv.style.display = 'none';
                errorDiv.style.display = 'block';
                submitBtn.disabled = false;
                submitBtn.textContent = 'Submit';
            }
        }, 1500); // Simulate network delay
    });
</script>

</body>
</html>

