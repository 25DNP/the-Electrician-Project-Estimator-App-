<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recent Projects - Electrician Project Estimator</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            display: flex;
            height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            width: 80px;
            background-color: #e8e8e8;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px 0;
            box-shadow: 2px 0 5px rgba(0,0,0,0.1);
            position: fixed;
            height: 100vh;
            left: 0;
            top: 0;
        }

        .nav-item {
            width: 50px;
            height: 50px;
            background-color: white;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 10px 0;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            color: #333;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .nav-item:hover {
            background-color: #007BFF;
            color: white;
            transform: translateX(5px);
        }

        .nav-item.active {
            background-color: #007BFF;
            color: white;
        }

        .nav-item svg {
            width: 24px;
            height: 24px;
            fill: currentColor;
        }

        /* Main content area */
        .main-content {
            margin-left: 80px;
            flex: 1;
            padding: 30px;
            background-color: #f5f5f5;
            overflow-y: auto;
        }

        .header {
            background-color: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .header h1 {
            color: #333;
            font-size: 28px;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
        }

        .header h1 svg {
            margin-right: 10px;
            fill: #007BFF;
        }

        .header p {
            color: #666;
            font-size: 16px;
        }

        .stats-bar {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            text-align: center;
        }

        .stat-number {
            font-size: 28px;
            font-weight: bold;
            color: #007BFF;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #666;
            font-size: 14px;
        }

        .filters {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            display: flex;
            gap: 15px;
            align-items: center;
            flex-wrap: wrap;
        }

        .filter-item {
            display: flex;
            flex-direction: column;
        }

        .filter-item label {
            font-size: 12px;
            color: #666;
            margin-bottom: 5px;
        }

        .filter-item select, .filter-item input {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 14px;
        }

        .projects-container {
            display: grid;
            gap: 15px;
        }

        .project-card {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            border-left: 4px solid #007BFF;
        }

        .project-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

        .project-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
        }

        .project-title {
            font-size: 18px;
            font-weight: bold;
            color: #333;
            margin-bottom: 5px;
        }

        .project-date {
            font-size: 12px;
            color: #666;
        }

        .project-status {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 500;
            background-color: #d4edda;
            color: #155724;
        }

        .project-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }

        .detail-item {
            display: flex;
            flex-direction: column;
        }

        .detail-label {
            font-size: 12px;
            color: #666;
            margin-bottom: 2px;
        }

        .detail-value {
            font-size: 14px;
            font-weight: 500;
            color: #333;
        }

        .project-total {
            font-size: 20px;
            font-weight: bold;
            color: #007BFF;
            text-align: right;
            border-top: 1px solid #eee;
            padding-top: 10px;
        }

        .project-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .btn {
            padding: 8px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 12px;
            transition: all 0.3s ease;
        }

        .btn-view {
            background-color: #007BFF;
            color: white;
        }

        .btn-view:hover {
            background-color: #0056b3;
        }

        .btn-download {
            background-color: #28a745;
            color: white;
        }

        .btn-download:hover {
            background-color: #218838;
        }

        .btn-delete {
            background-color: #dc3545;
            color: white;
        }

        .btn-delete:hover {
            background-color: #c82333;
        }

        .no-projects {
            text-align: center;
            padding: 50px;
            color: #666;
        }

        .no-projects svg {
            width: 64px;
            height: 64px;
            fill: #ccc;
            margin-bottom: 20px;
        }

        .search-bar {
            flex: 1;
        }

        .search-bar input {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 25px;
            font-size: 14px;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .sidebar {
                width: 60px;
            }
            .main-content {
                margin-left: 60px;
                padding: 20px;
            }
            .nav-item {
                width: 40px;
                height: 40px;
            }
            .filters {
                flex-direction: column;
                align-items: stretch;
            }
            .project-details {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar Navigation -->
    <div class="sidebar">
        <a href="Dashboard.html" class="nav-item" title="Dashboard">
            <svg viewBox="0 0 24 24">
                <path d="M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z"/>
            </svg>
        </a>
        
        <a href="JobEstimate.html" class="nav-item" title="Job Estimate">
            <svg viewBox="0 0 24 24">
                <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
            </svg>
        </a>
        
        <a href="ExportPDF.html" class="nav-item" title="Export PDF">
            <svg viewBox="0 0 24 24">
                <path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/>
            </svg>
        </a>

        <a href="RecentProjects.html" class="nav-item active" title="Recent Projects">
            <svg viewBox="0 0 24 24">
                <path d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M16.2,16.2L11,13V7H12.5V12.2L17,14.9L16.2,16.2Z"/>
            </svg>
        </a>
    </div>

    <!-- Main Content Area -->
    <div class="main-content">
        <div class="header">
            <h1>
                <svg viewBox="0 0 24 24" width="32" height="32">
                    <path d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M16.2,16.2L11,13V7H12.5V12.2L17,14.9L16.2,16.2Z"/>
                </svg>
                Recent Projects
            </h1>
            <p>View and manage your completed electrical project estimates</p>
        </div>

        <div class="stats-bar">
            <div class="stat-card">
                <div class="stat-number" id="totalProjects">0</div>
                <div class="stat-label">Total Projects</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="totalRevenue">$0</div>
                <div class="stat-label">Total Revenue</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="avgProject">$0</div>
                <div class="stat-label">Avg Project Value</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="thisMonth">0</div>
                <div class="stat-label">This Month</div>
            </div>
        </div>

        <div class="filters">
            <div class="search-bar">
                <input type="text" id="searchInput" placeholder="🔍 Search projects...">
            </div>
            <div class="filter-item">
                <label>Sort By</label>
                <select id="sortSelect">
                    <option value="newest">Newest First</option>
                    <option value="oldest">Oldest First</option>
                    <option value="highest">Highest Value</option>
                    <option value="lowest">Lowest Value</option>
                    <option value="name">Project Name</option>
                </select>
            </div>
            <div class="filter-item">
                <label>Date Range</label>
                <select id="dateFilter">
                    <option value="all">All Time</option>
                    <option value="week">Last Week</option>
                    <option value="month">Last Month</option>
                    <option value="quarter">Last Quarter</option>
                    <option value="year">Last Year</option>
                </select>
            </div>
        </div>

        <div class="projects-container" id="projectsContainer">
            <!-- Projects will be loaded here by JavaScript -->
        </div>
    </div>

    <script>
        let allProjects = [];
        let filteredProjects = [];

        function loadProjects() {
            allProjects = JSON.parse(localStorage.getItem('recentProjects') || '[]');
            filteredProjects = [...allProjects];
            displayProjects();
            updateStats();
        }

        function displayProjects() {
            const container = document.getElementById('projectsContainer');

            if (filteredProjects.length === 0) {
                container.innerHTML = `
                    <div class="no-projects">
                        <svg viewBox="0 0 24 24">
                            <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"/>
                        </svg>
                        <h3>No projects found</h3>
                        <p>Start by creating a new estimate to see projects here.</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = filteredProjects.map(project => {
                const completedDate = new Date(project.completedAt || project.createdAt);
                const isRecent = (Date.now() - completedDate.getTime()) < (7 * 24 * 60 * 60 * 1000); // 7 days

                return `
                    <div class="project-card">
                        <div class="project-header">
                            <div>
                                <div class="project-title">${project.projectName || 'Untitled Project'}</div>
                                <div class="project-date">Completed: ${completedDate.toLocaleDateString()} at ${completedDate.toLocaleTimeString()}</div>
                            </div>
                            <div class="project-status">${isRecent ? '🆕 Recent' : '✅ Completed'}</div>
                        </div>
                        
                        <div class="project-details">
                            <div class="detail-item">
                                <div class="detail-label">Materials</div>
                                <div class="detail-value">$${project.materials.toFixed(2)}</div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Labor Hours</div>
                                <div class="detail-value">${project.laborTime} hrs</div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Hourly Rate</div>
                                <div class="detail-value">$${project.hourlyRate}</div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Created By</div>
                                <div class="detail-value">${project.createdBy || 'Unknown'}</div>
                            </div>
                        </div>

                        <div class="project-total">
                            Total: $${project.total.toFixed(2)}
                        </div>

                        <div class="project-actions">
                            <button class="btn btn-view" onclick="viewProject(${project.id})">👁️ View Details</button>
                            <button class="btn btn-download" onclick="downloadProject(${project.id})">📥 Re-download PDF</button>
                            <button class="btn btn-delete" onclick="deleteProject(${project.id})">🗑️ Delete</button>
                        </div>
                    </div>
                `;
            }).join('');
        }

        function updateStats() {
            const totalProjects = allProjects.length;
            const totalRevenue = allProjects.reduce((sum, p) => sum + p.total, 0);
            const avgProject = totalProjects > 0 ? totalRevenue / totalProjects : 0;
            
            const thisMonth = allProjects.filter(p => {
                const projectDate = new Date(p.completedAt || p.createdAt);
                const now = new Date();
                return projectDate.getMonth() === now.getMonth() && projectDate.getFullYear() === now.getFullYear();
            }).length;

            document.getElementById('totalProjects').textContent = totalProjects;
            document.getElementById('totalRevenue').textContent = '$' + totalRevenue.toFixed(0);
            document.getElementById('avgProject').textContent = '$' + avgProject.toFixed(0);
            document.getElementById('thisMonth').textContent = thisMonth;
        }

        function filterAndSort() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const sortBy = document.getElementById('sortSelect').value;
            const dateFilter = document.getElementById('dateFilter').value;

            // Filter by search term
            filteredProjects = allProjects.filter(project => 
                (project.projectName || '').toLowerCase().includes(searchTerm) ||
                (project.createdBy || '').toLowerCase().includes(searchTerm)
            );

            // Filter by date
            if (dateFilter !== 'all') {
                const now = new Date();
                const cutoffDate = new Date();
                
                switch (dateFilter) {
                    case 'week':
                        cutoffDate.setDate(now.getDate() - 7);
                        break;
                    case 'month':
                        cutoffDate.setMonth(now.getMonth() - 1);
                        break;
                    case 'quarter':
                        cutoffDate.setMonth(now.getMonth() - 3);
                        break;
                    case 'year':
                        cutoffDate.setFullYear(now.getFullYear() - 1);
                        break;
                }

                filteredProjects = filteredProjects.filter(project => {
                    const projectDate = new Date(project.completedAt || project.createdAt);
                    return projectDate >= cutoffDate;
                });
            }

            // Sort projects
            filteredProjects.sort((a, b) => {
                switch (sortBy) {
                    case 'newest':
                        return new Date(b.completedAt || b.createdAt) - new Date(a.completedAt || a.createdAt);
                    case 'oldest':
                        return new Date(a.completedAt || a.createdAt) - new Date(b.completedAt || b.createdAt);
                    case 'highest':
                        return b.total - a.total;
                    case 'lowest':
                        return a.total - b.total;
                    case 'name':
                        return (a.projectName || '').localeCompare(b.projectName || '');
                    default:
                        return 0;
                }
            });

            displayProjects();
        }

        function viewProject(projectId) {
            const project = allProjects.find(p => p.id === projectId);
            if (project) {
                localStorage.setItem('currentEstimate', JSON.stringify(project));
                window.location.href = 'ExportPDF.html';
            }
        }

        function downloadProject(projectId) {
            const project = allProjects.find(p => p.id === projectId);
            if (project) {
                // Re-generate and download PDF
                const pdfContent = `
ELECTRICAL PROJECT ESTIMATE
${project.projectName || 'Untitled Project'}
${'='.repeat(50)}

Date: ${new Date(project.completedAt || project.createdAt).toLocaleDateString()}
Electrician: ${project.createdBy || 'Professional Electrician'}

COST BREAKDOWN:
${'-'.repeat(30)}
Materials:              $${project.materials.toFixed(2)}
Labor (${project.laborTime} hrs × $${project.hourlyRate}): $${project.laborCost.toFixed(2)}
Subtotal:              $${project.subtotal.toFixed(2)}
Tax (8.5%):            $${project.taxAmount.toFixed(2)}
${'-'.repeat(30)}
TOTAL:                 $${project.total.toFixed(2)}

Generated on: ${new Date().toLocaleString()}
                `;

                const blob = new Blob([pdfContent], { type: 'text/plain' });
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `${project.projectName || 'estimate'}_${project.id}.txt`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);
            }
        }

        function deleteProject(projectId) {
            if (confirm('Are you sure you want to delete this project? This action cannot be undone.')) {
                allProjects = allProjects.filter(p => p.id !== projectId);
                localStorage.setItem('recentProjects', JSON.stringify(allProjects));
                loadProjects();
            }
        }

        // Event listeners
        document.getElementById('searchInput').addEventListener('input', filterAndSort);
        document.getElementById('sortSelect').addEventListener('change', filterAndSort);
        document.getElementById('dateFilter').addEventListener('change', filterAndSort);

        // Navigation active state
        document.addEventListener('DOMContentLoaded', function() {
            const navItems = document.querySelectorAll('.nav-item');
            navItems.forEach(item => {
                item.addEventListener('click', function(e) {
                    navItems.forEach(nav => nav.classList.remove('active'));
                    this.classList.add('active');
                });
            });
        });

        // Initialize page
        loadProjects();
    </script>
</body>
</html>
